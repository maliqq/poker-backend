#!/usr/bin/env ruby
# Generated by the protocol buffer compiler. DO NOT EDIT!

require 'protocol_buffers'

begin; require 'src/main/protobuf/wire.pb'; rescue LoadError; end
begin; require 'src/main/protobuf/cmd.pb'; rescue LoadError; end

module De
  module Pokerno
    module Protocol
      module Rpc
        # forward declarations
        class CreateRoom < ::ProtocolBuffers::Message; end
        class NodeAction < ::ProtocolBuffers::Message; end
        class RoomAction < ::ProtocolBuffers::Message; end
        class TableAction < ::ProtocolBuffers::Message; end
        class DealAction < ::ProtocolBuffers::Message; end
        class Request < ::ProtocolBuffers::Message; end

        class CreateRoom < ::ProtocolBuffers::Message
          set_fully_qualified_name "de.pokerno.protocol.rpc.CreateRoom"

          required :string, :Id, 1
          required ::De::Pokerno::Protocol::Wire::Table, :Table, 2
          required ::De::Pokerno::Protocol::Wire::Variation, :Variation, 3
          required ::De::Pokerno::Protocol::Wire::Stake, :Stake, 4
        end

        class NodeAction < ::ProtocolBuffers::Message
          # forward declarations

          # enums
          module ActionType
            include ::ProtocolBuffers::Enum

            set_fully_qualified_name "de.pokerno.protocol.rpc.NodeAction.ActionType"

            CREATE_ROOM = 1
          end

          set_fully_qualified_name "de.pokerno.protocol.rpc.NodeAction"

          required ::De::Pokerno::Protocol::Rpc::NodeAction::ActionType, :Type, 1
          optional ::De::Pokerno::Protocol::Rpc::CreateRoom, :CreateRoom, 2
        end

        class RoomAction < ::ProtocolBuffers::Message
          # forward declarations

          # enums
          module ActionType
            include ::ProtocolBuffers::Enum

            set_fully_qualified_name "de.pokerno.protocol.rpc.RoomAction.ActionType"

            CLOSE = 1
            PAUSE = 2
            PAUSE_BREAK = 4
            PAUSE_ADDON_BREAK = 5
            PAUSE_BUBBLE = 6
            PAUSE_PRIZE_SPLIT = 7
            RESUME = 8
            CANCEL_CURRENT_DEAL = 9
            MAINTENANCE = 10
          end

          set_fully_qualified_name "de.pokerno.protocol.rpc.RoomAction"

          required ::De::Pokerno::Protocol::Rpc::RoomAction::ActionType, :Type, 1
          required :string, :Id, 2
          optional :int32, :Deadline, 3
        end

        class TableAction < ::ProtocolBuffers::Message
          # forward declarations

          # enums
          module ActionType
            include ::ProtocolBuffers::Enum

            set_fully_qualified_name "de.pokerno.protocol.rpc.TableAction.ActionType"

            JOIN_PLAYER = 1
            KICK_PLAYER = 2
            CHAT = 3
          end

          set_fully_qualified_name "de.pokerno.protocol.rpc.TableAction"

          required ::De::Pokerno::Protocol::Rpc::TableAction::ActionType, :Type, 1
          optional ::De::Pokerno::Protocol::Cmd::JoinPlayer, :JoinPlayer, 2
          optional ::De::Pokerno::Protocol::Cmd::KickPlayer, :KickPlayer, 3
          optional ::De::Pokerno::Protocol::Cmd::Chat, :Chat, 4
        end

        class DealAction < ::ProtocolBuffers::Message
          # forward declarations

          # enums
          module ActionType
            include ::ProtocolBuffers::Enum

            set_fully_qualified_name "de.pokerno.protocol.rpc.DealAction.ActionType"

            ADD_BET = 1
            DEAL_CARDS = 2
            DISCARD_CARDS = 3
            SHOW_CARDS = 4
          end

          set_fully_qualified_name "de.pokerno.protocol.rpc.DealAction"

          required ::De::Pokerno::Protocol::Rpc::DealAction::ActionType, :Type, 1
          optional ::De::Pokerno::Protocol::Cmd::AddBet, :AddBet, 2
          optional ::De::Pokerno::Protocol::Cmd::DealCards, :DealCards, 3
          optional ::De::Pokerno::Protocol::Cmd::DiscardCards, :DiscardCards, 4
          optional ::De::Pokerno::Protocol::Cmd::ShowCards, :ShowCards, 5
        end

        class Request < ::ProtocolBuffers::Message
          # forward declarations

          # enums
          module RequestType
            include ::ProtocolBuffers::Enum

            set_fully_qualified_name "de.pokerno.protocol.rpc.Request.RequestType"

            NODE_ACTION = 1
            ROOM_ACTION = 2
            TABLE_ACTION = 3
            DEAL_ACTION = 4
          end

          set_fully_qualified_name "de.pokerno.protocol.rpc.Request"

          required ::De::Pokerno::Protocol::Rpc::Request::RequestType, :Type, 1
          optional ::De::Pokerno::Protocol::Rpc::NodeAction, :NodeAction, 2
          optional ::De::Pokerno::Protocol::Rpc::RoomAction, :RoomAction, 3
          optional ::De::Pokerno::Protocol::Rpc::TableAction, :TableAction, 4
          optional ::De::Pokerno::Protocol::Rpc::DealAction, :DealAction, 5
        end

      end
    end
  end
end
